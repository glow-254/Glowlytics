name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: glow
          POSTGRES_PASSWORD: glow
          POSTGRES_DB: glowlytics
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Set up Prisma
      run: npx prisma generate

    - name: Wait for PostgreSQL to be ready
      run: |
        for i in {1..15}; do
          pg_isready -h 127.0.0.1 -p 5432 && break
          echo "Waiting for PostgreSQL..."
          sleep 2
        done

    - name: Run Prisma migrations
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
      run: npx prisma migrate deploy

    - name: Run tests
      run: yarn test

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: ./test-results # Adjust the path to your test output

  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Run linter
      run: yarn lint
